环境：安装Vm 12.0以上版本，Centos 7.0以上版本
使用root账号进入系统，执行以下步骤

一、从git下载代码
git clone https://github.com/jice1001/server.git
二、安装eclipse
http://www.eclipse.rg/downloads/download.php?file=/technology/epp/downloads/release/mars/1/eclipse-cpp-mars-1-linux-gtk-x86_64.tar.gz
从这里下载64位eclipse for c++，放到/root 目录下面，执行下面命令
tar -zxvf eclipse-cpp-mars-1-linux-gtk-x86_64.tar.gz
三、安装XManager 4.0以上版本，使用xshell在windows打开eclipse,将项目导入到eclipse里面
四、安装boost
    yum install boost  
    yum install boost-devel 
五、安装jsoncpp
	1、解压jsoncpp-bin-0.5.0.tar.bz2文件。
	2、将其中include/json目录拷贝到/usr/local/include。
	3、将其中libs/linux-gcc-4.4.6/libjson_linux-gcc-4.4.6_libmt.so文件拷贝到/usr/local/lib64。
	4、建立软连接
	cd /usr/local/lib64
	ln -s libjson_linux-gcc-4.4.6_libmt.so libjsoncpp.so
	
	//源码编译安装jsoncpp
   tar -zxvf scons-2.1.0.tar.gz 
   export MYSCONS=/root/scons-2.1.0
   export SCONS_LIB_DIR=$MYSCONS/engine
   tar -zxvf jsoncpp-src-0.5.0.tar.gz
   cd jsoncpp-src-0.5.0/
   python $MYSCONS/script/scons platform=linux-gcc  编译生成相应的库
   cp libs/linux-gcc-4.8.3/libjson_linux-gcc-4.8.3_libmt.a /usr/local/lib  将json库拷贝到系统库文件
   cp libs/linux-gcc-4.8.3/libjson_linux-gcc-4.8.3_libmt.so /usr/local/lib

六、安装mysql
1. 下载mysql的repo源
wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
2. 安装mysql-community-release-el7-5.noarch.rpm包
rpm -ivh mysql-community-release-el7-5.noarch.rpm
安装这个包后，会获得两个mysql的yum repo源：/etc/yum.repos.d/mysql-community.repo，/etc/yum.repos.d/mysql-community-source.repo。
3. 安装mysql
sudo yum install mysql-server
根据步骤安装就可以了，不过安装完成后，没有密码，需要重置密码。
4. 重置密码
重置密码前，首先要登录
mysql -u root
登录时有可能报这样的错：ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock‘ (2)，原因是/var/lib/mysql的访问权限问题。下面的命令把/var/lib/mysql的拥有者改为当前用户：
chown -R root:root /var/lib/mysql
然后，重启服务：
service mysqld restart
接下来登录重置密码：

mysql -u root
use mysql;
update user set password=password('123456') where user='root';
flush privileges;

5. 开放3306端口
vim /etc/sysconfig/iptables
添加以下内容：
-A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT
保存后重启防火墙：
systemctl restart firewalld.service
这样从其它客户机也可以连接上mysql服务了。

七、拷贝mysql-connector库和netlib库
进入server/doc目录下面
cp libnetlib.so /usr/local/lib64
tar -zxvf mysql-connector-c++-1.1.1-linux-el6-x86-64bit.tar.gz
将include目录下文件拷贝到/usr/local/include
将lib目录下的libmysqlcppconn.so,libmysqlcppconn.so.6,libmysqlcppconn.so.6.1.1.1拷贝到/usr/local/1ib64
cp lib/libmysqlcppconn-static.a /usr/local/lib
编辑/etc/ld.so.conf
添加/usr/local/lib64
执行命令ldconfig

八、安装mongodb（安装到/root/mongodb）
tar zxvf mongodb-linux-x86_64-2.4.9.tgz
mv mongodb-linux-x86_64-2.4.9 mongodb
mkdir /data
cd data
mkdir db
mkdir log

1、编译使用
将libmongoclient.so拷贝到/usr/local/lib64,执行ldconfig
2、运行
开启mongodb服务器  /root/mongodb/bin/mongod --dbpath /data/db --port 27017 &
启动mongodb客户端  /root/mongdb/bin/mongo

九、拷贝v8运行环境
tar -zxvf v8.tar.gz
将所有.so .a文件拷贝到/usr/local/lib下面
将include文件夹拷贝到/usr/local/include下面
将natives_blob.bin snapshot_blob.bin拷贝到编译后的Debug目录下面

十、编译运行程序
编译程序，生成Debug目录，将config文件夹和v8/js文件夹拷贝到Debug下面，运行server即可